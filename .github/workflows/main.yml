name: Test project

on: [push]
# defaults:
#       run:
#         working-directory: ./app
jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - app/
        testMode:
          - playmode
          - editmode
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}
#name: Build project

# on: [push]
# defaults:
#       run:
#         working-directory: ./app
# jobs:
#   buildForAllSupportedPlatforms:
#     name: Build for ${{ matrix.targetPlatform }}
#     runs-on: self-hosted
    
#     strategy:
#       fail-fast: false
#       matrix:
#         targetPlatform:
#           - iOS # Build an iOS player.
#           - Android # Build an Android .apk standalone app.
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#           lfs: true
#       - uses: actions/cache@v3
#         with:
#           path: ./app/Library
#           key: Library-${{ matrix.targetPlatform }}
#           restore-keys: Library-
#       - uses: game-ci/unity-builder@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#         with:
#           targetPlatform: ${{ matrix.targetPlatform }}
#       - uses: actions/upload-artifact@v2
#         with:
#           name: Build-${{ matrix.targetPlatform }}
#           path: build/${{ matrix.targetPlatform }}
